// <auto-generated />
using System;
using FHIRGenomicsImporter.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FHIRGenomicsImporter.Migrations
{
    [DbContext(typeof(AgsContext))]
    [Migration("20200415201223_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsattributeDataTypes", b =>
                {
                    b.Property<int>("DataTypeId")
                        .HasColumnName("DataTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("DataTypeId");

                    b.ToTable("AGSAttributeDataTypes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsattributeTypes", b =>
                {
                    b.Property<int>("AttributeTypeId")
                        .HasColumnName("AttributeTypeID")
                        .HasColumnType("int");

                    b.Property<int>("DataTypeId")
                        .HasColumnName("DataTypeID")
                        .HasColumnType("int");

                    b.Property<string>("JoinColumn")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("JoinTable")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int?>("MinLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<byte>("ValuePosition")
                        .HasColumnType("tinyint");

                    b.HasKey("AttributeTypeId");

                    b.HasIndex("DataTypeId");

                    b.ToTable("AGSAttributeTypes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsattributes", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnName("AttributeID")
                        .HasColumnType("int");

                    b.Property<int>("AttributeTypeId")
                        .HasColumnName("AttributeTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int>("ParentId")
                        .HasColumnName("ParentID")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("AttributeId");

                    b.HasIndex("AttributeTypeId");

                    b.ToTable("AGSAttributes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsauditLogs", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AuditLogID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ActionOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AuditLogId");

                    b.ToTable("AGSAuditLogs");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsclinics", b =>
                {
                    b.Property<string>("Clinic")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("ClinicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClinicID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("AGSClinics");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgscommunicationTemplates", b =>
                {
                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<byte>("ContentType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TemplateContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TemplateType")
                        .HasColumnType("tinyint");

                    b.HasKey("TemplateId");

                    b.ToTable("AGSCommunicationTemplates");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agscommunications", b =>
                {
                    b.Property<int>("CommunicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommunicationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("CommunicationType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ContentData")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(260)")
                        .HasMaxLength(260);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ObservationGroupId")
                        .HasColumnName("ObservationGroupID")
                        .HasColumnType("int");

                    b.Property<string>("SentBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("SentOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("UploadedData")
                        .HasColumnType("image");

                    b.HasKey("CommunicationId");

                    b.HasIndex("ObservationGroupId");

                    b.HasIndex("TemplateId");

                    b.ToTable("AGSCommunications");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsdocumentation", b =>
                {
                    b.Property<int>("DocumentationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocumentationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(260)")
                        .HasMaxLength(260)
                        .IsUnicode(false);

                    b.Property<string>("Mimetype")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("ParentId")
                        .HasColumnName("ParentID")
                        .HasColumnType("int");

                    b.Property<byte>("ParentType")
                        .HasColumnType("tinyint");

                    b.HasKey("DocumentationId");

                    b.ToTable("AGSDocumentation");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsdocumentationAudits", b =>
                {
                    b.Property<int>("ResultMessageDocumentationAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResultMessageDocumentationAuditID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("DocumentationId")
                        .HasColumnName("DocumentationID")
                        .HasColumnType("int");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FromValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("ResultMessageDocumentationAuditId")
                        .HasName("PK_AGSResultMessageDocumentation_Audit");

                    b.HasIndex("DocumentationId");

                    b.ToTable("AGSDocumentation_Audits");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsfilterSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AGSFilterSettings");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsinterpretationTemplates", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TemplateID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TemplateKey")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TemplateText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("TemplateId")
                        .HasName("PK_AGSInterpretationTemplate");

                    b.HasIndex("TemplateKey", "Status")
                        .HasName("IX_AGSInterpretationTemplates_TemplateKeyAndStatus");

                    b.ToTable("AGSInterpretationTemplates");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgslogicModules", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnName("ModuleID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ModuleId");

                    b.ToTable("AGSLogicModules");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsmappings", b =>
                {
                    b.Property<int>("MappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MappingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FromContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FromId")
                        .IsRequired()
                        .HasColumnName("FromID")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("ToContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ToId")
                        .IsRequired()
                        .HasColumnName("ToID")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("MappingId");

                    b.ToTable("AGSMappings");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsnuEMergeSeq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedValues")
                        .HasColumnName("Allowed_Values")
                        .HasColumnType("varchar(23)")
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("Category")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ComponentDisplayedInEpic")
                        .HasColumnName("Component_Displayed_in_Epic")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnName("Display_Order")
                        .HasColumnType("int");

                    b.Property<string>("GeneSnp")
                        .HasColumnName("Gene_SNP")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MeetsEpicGuidelines")
                        .HasColumnName("Meets_Epic_Guidelines")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("AGSNU_eMERGE_Seq");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationAudits", b =>
                {
                    b.Property<int>("ObservationAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObservationAuditID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FromValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObservationId")
                        .HasColumnName("ObservationID")
                        .HasColumnType("int");

                    b.Property<string>("ToValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("ObservationAuditId");

                    b.ToTable("AGSObservation_Audits");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationDetails", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DetailID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObservationId")
                        .HasColumnName("ObservationID")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("DetailId");

                    b.HasIndex("ObservationId");

                    b.ToTable("AGSObservationDetails");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationExportHistory", b =>
                {
                    b.Property<int>("ExportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ExportID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupId")
                        .HasColumnName("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("ObservationId")
                        .HasColumnName("ObservationID")
                        .HasColumnType("int");

                    b.Property<string>("ReleasedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("ReleasedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ReleasedTo")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("ExportId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ObservationId");

                    b.ToTable("AGSObservationExportHistory");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationGroupMembers", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MemberID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CodeSystem")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CodeValue")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<int>("GroupId")
                        .HasColumnName("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("ObservationId")
                        .HasColumnName("ObservationID")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("MemberId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ObservationId");

                    b.ToTable("AGSObservationGroupMembers");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationGroups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GroupID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CodeSystem")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CodeValue")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("ReleasedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ReleasedOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("GroupId");

                    b.ToTable("AGSObservationGroups");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationResultAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ObservationId")
                        .HasColumnName("ObservationID")
                        .HasColumnType("int");

                    b.Property<int>("ResultAttributeId")
                        .HasColumnName("ResultAttributeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObservationId");

                    b.HasIndex("ResultAttributeId");

                    b.ToTable("AGSObservationResultAttributes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsobservations", b =>
                {
                    b.Property<int>("ObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObservationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbnormalFlag")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccessionNumber")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ClinicalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CodeSystem")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnName("ModuleID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("ReleasedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ReleasedOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ObservationId");

                    b.HasIndex("PatientId");

                    b.ToTable("AGSObservations");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspatientAudits", b =>
                {
                    b.Property<int>("PatientAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PatientAuditID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FromValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("ToValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("PatientAuditId")
                        .HasName("PK_AGSResultPatient_Audits");

                    b.HasIndex("PatientId");

                    b.ToTable("AGSPatient_Audits");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspatientCtmsdata", b =>
                {
                    b.Property<int>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<string>("StudyId")
                        .HasColumnName("StudyID")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DiseaseStatus")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("HasPreviouslyKnownMutations")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("IndicationForTesting")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("PreviouslyKnownMutations")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PatientId", "MessageId", "StudyId");

                    b.ToTable("AGSPatientCTMSData");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agspatients", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PatientID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Mrn")
                        .IsRequired()
                        .HasColumnName("MRN")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("PatientId");

                    b.ToTable("AGSPatients");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspgxMappings", b =>
                {
                    b.Property<string>("CodeName")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<string>("CodeValue")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DisplayDrugsLong")
                        .HasColumnType("varchar(53)")
                        .HasMaxLength(53)
                        .IsUnicode(false);

                    b.Property<string>("DisplayDrugsShort")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Drugs")
                        .HasColumnType("varchar(21)")
                        .HasMaxLength(21)
                        .IsUnicode(false);

                    b.Property<string>("Gene")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("AGSPGx_Mappings");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspgxReportLogic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Diplotype")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DisplayDiplotype")
                        .HasColumnName("Display_Diplotype")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DisplayDrugs")
                        .HasColumnName("Display_Drugs")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Drugs")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Gene")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LabInterpretation")
                        .HasColumnName("Lab_Interpretation")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("NuReportDrugResponse")
                        .HasColumnName("NU_Report_Drug_Response")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("NuReportRecommendation")
                        .HasColumnName("NU_Report_Recommendation")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("NuSummaryDrugGeneInteraction")
                        .HasColumnName("NU_Summary_Drug_Gene_Interaction")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("NuSummaryDrugGeneInteractionPrinted")
                        .HasColumnName("NU_Summary_Drug_Gene_Interaction_Printed")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhenotypeClinicalImplication")
                        .HasColumnName("Phenotype_Clinical_implication")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte?>("SortOrder")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("AGSPGx_Report_Logic");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspgxStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Mrn")
                        .HasColumnName("MRN")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnName("AttributeID")
                        .HasColumnType("int");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("ComponentDisplayedInEpic")
                        .HasColumnName("Component_Displayed_in_Epic")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Diplotype")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DiplotypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayDiplotype")
                        .HasColumnName("Display_Diplotype")
                        .HasColumnType("nvarchar(33)")
                        .HasMaxLength(33);

                    b.Property<string>("DisplayDrugsLong")
                        .HasColumnType("varchar(53)")
                        .HasMaxLength(53)
                        .IsUnicode(false);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnName("Display_Order")
                        .HasColumnType("int");

                    b.Property<string>("Drug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drugs")
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.Property<string>("Gene")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneSnp")
                        .HasColumnName("Gene_SNP")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("LabInterpretation")
                        .HasColumnName("Lab_Interpretation")
                        .HasColumnType("nvarchar(2276)")
                        .HasMaxLength(2276);

                    b.Property<string>("LogicGene")
                        .HasColumnName("Logic_Gene")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("NuReportDrugResponse")
                        .HasColumnName("NU_Report_Drug_Response")
                        .HasColumnType("nvarchar(179)")
                        .HasMaxLength(179);

                    b.Property<string>("NuReportRecommendation")
                        .HasColumnName("NU_Report_Recommendation")
                        .HasColumnType("nvarchar(560)")
                        .HasMaxLength(560);

                    b.Property<string>("NuSummaryDrugGeneInteraction")
                        .HasColumnName("NU_Summary_Drug_Gene_Interaction")
                        .HasColumnType("nvarchar(55)")
                        .HasMaxLength(55);

                    b.Property<int?>("ParentResultAttributeId")
                        .HasColumnName("ParentResultAttributeID")
                        .HasColumnType("int");

                    b.Property<string>("PhenotypeClinicalImplication")
                        .HasColumnName("Phenotype_Clinical_implication")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(108)")
                        .HasMaxLength(108);

                    b.Property<int>("ResultAttributeId")
                        .HasColumnName("ResultAttributeID")
                        .HasColumnType("int");

                    b.HasKey("Id", "PatientId", "Mrn", "MessageId");

                    b.ToTable("AGSPGxStage");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultAttributes", b =>
                {
                    b.Property<int>("ResultAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResultAttributeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttributeId")
                        .HasColumnName("AttributeID")
                        .HasColumnType("int");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("Lineage")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentResultAttributeId")
                        .HasColumnName("ParentResultAttributeID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultAttributeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("MessageId");

                    b.ToTable("AGSResultAttributes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessageAudits", b =>
                {
                    b.Property<int>("ResultMessageAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResultMessageAuditID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FromValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<string>("ToValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("ResultMessageAuditId")
                        .HasName("PK_AGSResultMessages_Audit");

                    b.HasIndex("MessageId");

                    b.ToTable("AGSResultMessage_Audits");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessageFileTypes", b =>
                {
                    b.Property<int>("MessageFileTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MessageFileTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ViewAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MessageFileTypeId");

                    b.ToTable("AGSResultMessageFileTypes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessageFiles", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("MessageFileTypeId")
                        .HasColumnName("MessageFileTypeID")
                        .HasColumnType("int");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("MessageId", "FileName");

                    b.HasIndex("MessageFileTypeId");

                    b.ToTable("AGSResultMessageFiles");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MessageID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("ProcessedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ReceivedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("MessageId");

                    b.ToTable("AGSResultMessages");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultPatients", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnName("MessageID")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnName("PatientID")
                        .HasColumnType("int");

                    b.HasKey("MessageId", "PatientId");

                    b.HasIndex("PatientId");

                    b.ToTable("AGSResultPatients");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultTypes", b =>
                {
                    b.Property<int>("ResultTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResultTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResultType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ResultTypeId");

                    b.ToTable("AGSResultTypes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsvariantAttributes", b =>
                {
                    b.Property<int>("VariantAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VariantAttributeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CodeSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("VariantId")
                        .HasColumnName("VariantID")
                        .HasColumnType("int");

                    b.HasKey("VariantAttributeId");

                    b.HasIndex("VariantId");

                    b.ToTable("AGSVariantAttributes");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsvariants", b =>
                {
                    b.Property<int>("VariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VariantID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("VariantId");

                    b.HasIndex("Context", "Type", "Value");

                    b.ToTable("AGSVariants");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsattributeTypes", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsattributeDataTypes", "DataType")
                        .WithMany("AgsattributeTypes")
                        .HasForeignKey("DataTypeId")
                        .HasConstraintName("FK_AGSAttributeTypes_AGSAttributeDataTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsattributes", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsattributeTypes", "AttributeType")
                        .WithMany("Agsattributes")
                        .HasForeignKey("AttributeTypeId")
                        .HasConstraintName("FK_AGSAttributes_AGSAttributeTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agscommunications", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsobservationGroups", "ObservationGroup")
                        .WithMany("Agscommunications")
                        .HasForeignKey("ObservationGroupId")
                        .HasConstraintName("FK_AGSObservationGroups_AGSCommunications")
                        .IsRequired();

                    b.HasOne("FHIRGenomicsImporter.Model.AgscommunicationTemplates", "Template")
                        .WithMany("Agscommunications")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK_AGSCommunications_AGSCommunicationTemplates");
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsdocumentationAudits", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agsdocumentation", "Documentation")
                        .WithMany("AgsdocumentationAudits")
                        .HasForeignKey("DocumentationId")
                        .HasConstraintName("FK_AGSDocumentation_Audits_AGSDocumentation")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationDetails", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agsobservations", "Observation")
                        .WithMany("AgsobservationDetails")
                        .HasForeignKey("ObservationId")
                        .HasConstraintName("FK_AGSObservationDetails_AGSObservations")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationExportHistory", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsobservationGroups", "Group")
                        .WithMany("AgsobservationExportHistory")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_AGSObservationExportHistory_AGSObservationGroups");

                    b.HasOne("FHIRGenomicsImporter.Model.Agsobservations", "Observation")
                        .WithMany("AgsobservationExportHistory")
                        .HasForeignKey("ObservationId")
                        .HasConstraintName("FK_AGSObservationExportHistory_AGSObservations")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationGroupMembers", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsobservationGroups", "Group")
                        .WithMany("AgsobservationGroupMembers")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_AGSObservationGroupMembers_AGSObservationGroups")
                        .IsRequired();

                    b.HasOne("FHIRGenomicsImporter.Model.Agsobservations", "Observation")
                        .WithMany("AgsobservationGroupMembers")
                        .HasForeignKey("ObservationId")
                        .HasConstraintName("FK_AGSObservationGroupMembers_AGSObservations")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsobservationResultAttributes", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agsobservations", "Observation")
                        .WithMany("AgsobservationResultAttributes")
                        .HasForeignKey("ObservationId")
                        .HasConstraintName("FK_AGSObservationResultAttributes_AGSObservations")
                        .IsRequired();

                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultAttributes", "ResultAttribute")
                        .WithMany("AgsobservationResultAttributes")
                        .HasForeignKey("ResultAttributeId")
                        .HasConstraintName("FK_AGSObservationResultAttributes_AGSResultAttributes")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.Agsobservations", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agspatients", "Patient")
                        .WithMany("Agsobservations")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_AGSObservations_AGSPatients")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgspatientAudits", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agspatients", "Patient")
                        .WithMany("AgspatientAudits")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_AGSPatient_Audits_AGSPatients")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultAttributes", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agsattributes", "Attribute")
                        .WithMany("AgsresultAttributes")
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("FK_AGSResultAttributes_AGSAttributes")
                        .IsRequired();

                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultMessages", "Message")
                        .WithMany("AgsresultAttributes")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_AGSResultAttributes_AGSResultMessages")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessageAudits", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultMessages", "Message")
                        .WithMany("AgsresultMessageAudits")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_AGSResultMessages_Audit_AGSResultMessages")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultMessageFiles", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultMessageFileTypes", "MessageFileType")
                        .WithMany("AgsresultMessageFiles")
                        .HasForeignKey("MessageFileTypeId")
                        .HasConstraintName("FK_AGSResultMessageFiles_AGSResultMessageFileTypes");

                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultMessages", "Message")
                        .WithMany("AgsresultMessageFiles")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_AGSResultMessageFiles_AGSResultMessages")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsresultPatients", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.AgsresultMessages", "Message")
                        .WithMany("AgsresultPatients")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_AGSResultPatients_AGSResultMessages")
                        .IsRequired();

                    b.HasOne("FHIRGenomicsImporter.Model.Agspatients", "Patient")
                        .WithMany("AgsresultPatients")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_AGSResultPatients_AGSPatients")
                        .IsRequired();
                });

            modelBuilder.Entity("FHIRGenomicsImporter.Model.AgsvariantAttributes", b =>
                {
                    b.HasOne("FHIRGenomicsImporter.Model.Agsvariants", "Variant")
                        .WithMany("AgsvariantAttributes")
                        .HasForeignKey("VariantId")
                        .HasConstraintName("FK_AGSVariantAttributes_AGSVariants")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
